-------------- Generator --------------
SRResNet_torch(
  (model): Sequential(
    (0): Conv2d (3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): Identity + 
    |Sequential(
    |  (0): ResNetBlock(
    |    (res): Sequential(
    |      (0): ReLU()
    |      (1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |      (2): ReLU()
    |      (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |    )
    |  )
    |  (1): ResNetBlock(
    |    (res): Sequential(
    |      (0): ReLU()
    |      (1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |      (2): ReLU()
    |      (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |    )
    |  )
    |  (2): ResNetBlock(
    |    (res): Sequential(
    |      (0): ReLU()
    |      (1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |      (2): ReLU()
    |      (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |    )
    |  )
    |  (3): ResNetBlock(
    |    (res): Sequential(
    |      (0): ReLU()
    |      (1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |      (2): ReLU()
    |      (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |    )
    |  )
    |  (4): ResNetBlock(
    |    (res): Sequential(
    |      (0): ReLU()
    |      (1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |      (2): ReLU()
    |      (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |    )
    |  )
    |  (5): ResNetBlock(
    |    (res): Sequential(
    |      (0): ReLU()
    |      (1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |      (2): ReLU()
    |      (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |    )
    |  )
    |  (6): ResNetBlock(
    |    (res): Sequential(
    |      (0): ReLU()
    |      (1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |      (2): ReLU()
    |      (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |    )
    |  )
    |  (7): ResNetBlock(
    |    (res): Sequential(
    |      (0): ReLU()
    |      (1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |      (2): ReLU()
    |      (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |    )
    |  )
    |  (8): ResNetBlock(
    |    (res): Sequential(
    |      (0): ReLU()
    |      (1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |      (2): ReLU()
    |      (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |    )
    |  )
    |  (9): ResNetBlock(
    |    (res): Sequential(
    |      (0): ReLU()
    |      (1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |      (2): ReLU()
    |      (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |    )
    |  )
    |  (10): ResNetBlock(
    |    (res): Sequential(
    |      (0): ReLU()
    |      (1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |      (2): ReLU()
    |      (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |    )
    |  )
    |  (11): ResNetBlock(
    |    (res): Sequential(
    |      (0): ReLU()
    |      (1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |      (2): ReLU()
    |      (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |    )
    |  )
    |  (12): ResNetBlock(
    |    (res): Sequential(
    |      (0): ReLU()
    |      (1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |      (2): ReLU()
    |      (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |    )
    |  )
    |  (13): ResNetBlock(
    |    (res): Sequential(
    |      (0): ReLU()
    |      (1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |      (2): ReLU()
    |      (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |    )
    |  )
    |  (14): ResNetBlock(
    |    (res): Sequential(
    |      (0): ReLU()
    |      (1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |      (2): ReLU()
    |      (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |    )
    |  )
    |  (15): ResNetBlock(
    |    (res): Sequential(
    |      (0): ReLU()
    |      (1): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |      (2): ReLU()
    |      (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |    )
    |  )
    |  (16): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    |)
    (2): Upsample(scale_factor=2, mode=nearest)
    (3): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): ReLU(inplace)
    (5): Upsample(scale_factor=2, mode=nearest)
    (6): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace)
    (8): Conv2d (64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace)
    (10): Conv2d (64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)
